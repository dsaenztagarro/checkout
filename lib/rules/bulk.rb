require_relative 'match_product_helper'

# The Rules module contains the rules managed by shopping engine
module Rules
  # The Bulk rule generates a discount when the basket contains at least a
  # certain number of units of a product
  class Bulk
    include MatchProductHelper

    # @param [Hash] opts the options to create a Bulk rule
    # @option opts [Product] :product
    # @option opts [Fixnum] :min_num The minimum number of products
    # @option opts [Price] :price_per_unit The price of product with discount
    def initialize(args)
      @product = args[:product]
      @min_num = args[:min_num]
      @price_per_unit = args[:price_per_unit]
    end

    # Executes the rule on a basket
    # @param [Basket] basket
    # @return [Event] the event generated by the matching products. Otherwise
    #   return nil
    def fire_for(basket)
      num = num_matching_products(basket)
      Event.new(created_by: self,
                product: @product,
                num_matches: num,
                new_price: @price_per_unit) if num >= @min_num
    end
  end
end
